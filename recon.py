import requests
import logging
import time
import socket
import dns.resolver
import nmap

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

def get_dns_info(domain):
    try:
        answers = dns.resolver.resolve(domain, 'A')
        return [str(answer) for answer in answers]
    except Exception as e:
        logger.error(f"Error getting DNS info: {e}")
        return []

def perform_port_scan(domain):
    nm = nmap.PortScanner()
    try:
        nm.scan(domain, '1-65535')
        scan_data = nm[domain]
        return scan_data
    except Exception as e:
        logger.error(f"Error performing port scan: {e}")
        return {}

def extract_ports(scan_data):
    if 'tcp' in scan_data:
        return scan_data['tcp'].keys()
    return []

def get_vulnerabilities(port, username, password):
    vulnerabilities = []
    try:
        logger.debug(f"Fetching vulnerabilities for port: {port}")
        response = requests.get(f'https://www.opencve.io/api/cve?search={port}', auth=(username, password))
        if response.status_code == 200:
            vulnerabilities = response.json()  # Directly use the list
            logger.debug(f"Vulnerabilities for port {port}: {vulnerabilities}")
        else:
            logger.error(f"Failed to fetch vulnerabilities: {response.status_code} {response.text}")
    except Exception as e:
        logger.error(f"Error getting vulnerabilities: {e}")
    return vulnerabilities

